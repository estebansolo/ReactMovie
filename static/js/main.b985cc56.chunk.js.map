{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","API_URL","API_KEY","HeroImage","props","SearchBar","state","Component","FourColGrid","LoadMoreBtn","Spinner","Home","movies","heroImage","loading","currentPage","totalPages","searchTerm","loadMoreItems","endpoint","_this","setState","concat","fetchItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","console","log","this","elements_HeroImage_HeroImage","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","App","elements_Header_Header","components_Home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","react_router_dom","basename","components_App_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b985cc56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"rmdb-header\">\n\t\t\t<div className=\"rmdb-header-content\">\n\t\t\t\t<img src=\"./images/reactMovie_logo.png\" alt=\"RMDB Logo\" className=\"rmdb-logo\" />\n\t\t\t\t<img src=\"./images/tmdb_logo.png\" alt=\"TMDB Logo\" className=\"rmdb-tmdb-logo\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd00159c5a83c1383d6fa79bc6f2d11c0';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React, { Component } from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = (props) => {\n\treturn <div>Hero Image</div>;\n};\n\nexport default HeroImage;\n","import React, { Component } from 'react';\n//import FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\tstate = {};\n\n\trender() {\n\t\treturn <div>SearchBar</div>;\n\t}\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './FourColGrid.css';\n\nconst FourColGrid = (props) => {\n\treturn <div>FourColGrid</div>;\n};\n\nexport default FourColGrid;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = (props) => {\n\treturn <div>Load More</div>;\n};\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n\treturn <div className=\"loader\" />;\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './Home.css';\n\nclass Home extends Component {\n\tstate = {\n\t\tmovies: [],\n\t\theroImage: null,\n\t\tloading: false,\n\t\tcurrentPage: 0,\n\t\ttotalPages: 0,\n\t\tsearchTerm: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n\t\tthis.fetchItems(endpoint);\n\t}\n\n\tloadMoreItems = () => {\n\t\tlet endpoint = '';\n\t\tthis.setState({ loading: true });\n\n\t\tif (this.state.searchTerm === '') {\n\t\t\tendpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n\t\t} else {\n\t\t\tendpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state\n\t\t\t\t.searchTerm}&page=${this.state.currentPage + 1}`;\n\t\t}\n\n\t\tthis.fetchItems(endpoint);\n\t};\n\n\tfetchItems = (endpoint) => {\n\t\tfetch(endpoint).then((result) => result.json()).then((result) => {\n\t\t\tthis.setState({\n\t\t\t\tmovies: [ ...this.state.movies, ...result.results ],\n\t\t\t\theroImage: this.state.heroImage || result.results[0],\n\t\t\t\tloading: false,\n\t\t\t\tcurrentPage: result.page,\n\t\t\t\ttotalPages: result.total_pages\n\t\t\t});\n\n\t\t\tconsole.log(result);\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"rmdb-home\">\n\t\t\t\t<HeroImage />\n\t\t\t\t<SearchBar />\n\t\t\t\t<FourColGrid />\n\t\t\t\t<Spinner />\n\t\t\t\t<LoadMoreBtn />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<Home />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<HashRouter basename=\"/\">\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}